[build-system]
requires = ["setuptools>=40.8.0", "wheel", "oldest-supported-numpy", "scipy>=0.13.2"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build = "cp38-*"
skip = "*-win32 *-manylinux_i686 *-musllinux_*"
test-requires = ["pytest", "osqp1", "mkl", "mkl-devel"]

[tool.cibuildwheel.linux]
environment = { OSQP_ALGEBRA="mkl", MKL_ROOT="/opt/intel/oneapi/mkl/latest" }
before-all = ".github/workflows/prepare_build_environment_linux_mkl.sh"
test-command = "OSQP_ALGEBRA=mkl LD_PRELOAD=$(dirname `which python`)/../lib/libmkl_core.so.2:$(dirname `which python`)/../lib/libmkl_sequential.so.2 pytest -s $(python -c \"import osqp; print(osqp.__path__[0])\")/tests"

[tool.cibuildwheel.macos]
environment = { OSQP_ALGEBRA="mkl", MKL_ROOT="/opt/intel/oneapi/mkl/latest" }
before-all = ".github/workflows/prepare_build_environment_macos_mkl.sh"

[tool.cibuildwheel.windows]
environment = { OSQP_ALGEBRA="mkl", MKL_ROOT="C:/Program Files (x86)/Intel/oneAPI/mkl/latest", MKL_DIR="C:/Program Files (x86)/Intel/oneAPI/mkl/latest/lib/cmake/mkl" }
before-all = "bash .github/workflows/prepare_build_environment_windows_mkl.sh"
repair-wheel-command = "delvewheel repair {wheel} --wheel-dir {dest_dir} --no-mangle-all --add-path \"C:/Program Files (x86)/Intel/oneAPI/mkl/latest/redist/intel64\" --add-dll \"mkl_sequential.2.dll;mkl_def.2.dll\""
test-command = "bash -c \"OSQP_ALGEBRA=mkl pytest -s $(python -c 'import osqp; print(osqp.__path__[0])')/tests\""
